services:
  db:
    image: postgres:15-alpine
    container_name: it-request-db
    environment:
      POSTGRES_USER: ${PGUSER:-it_admin}
      POSTGRES_PASSWORD: ${PGPASSWORD:-it_password}
      POSTGRES_DB: ${PGDATABASE:-it_request_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - it-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U it_admin"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: it-request-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=${NODE_ENV:-staging}
      - PORT=3001
      - PGHOST=db
      - PGUSER=${PGUSER:-it_admin}
      - PGPASSWORD=${PGPASSWORD:-it_password}
      - PGDATABASE=${PGDATABASE:-it_request_db}
      - PGPORT=5432
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - it-network
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

networks:
  it-network:
    driver: bridge

volumes:
  postgres_data:
